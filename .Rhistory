packagesTBI <- c("twitterR", "ROAuth", "hms", "tidytext", "tm", "wordcloud", "igraph", "glue", "networkD3",
"rtweet", "stringr", "ggeasy", "janeaustinr", "widyr")
install.packages(packagesTBI)
librarian::shelf(tidyverse, reshape2, readxl, data.table, nleqslv, BB, Metrics, ggthemes, pracma,
twitterR, ROAuth, hms, lubridate, tidytext, tm, wordcould, igraph, glue, networkD3,
rtweet, stringr, ggeasy, plotly, janeaustin, widyr)
warnings()
librarian::shelf(tidyverse, reshape2, readxl, data.table, nleqslv, BB, Metrics, ggthemes, pracma,
twitteR, ROAuth, hms, lubridate, tidytext, tm, wordcloud, igraph, glue, networkD3,
rtweet, stringr, ggeasy, plotly, janeaustenr, widyr)
install.packages("twitteR")
librarian::shelf(tidyverse, reshape2, readxl, data.table, nleqslv, BB, Metrics, ggthemes, pracma,
twitteR, ROAuth, hms, lubridate, tidytext, tm, wordcloud, igraph, glue, networkD3,
rtweet, stringr, ggeasy, plotly, janeaustenr, widyr)
install.packages("rjson")
install.packages("rjson", dependencies=TRUE, repos='http://cran.rstudio.com/')
installedPackages <- installed.packages()
installedPackages
tmp <- installed.packages()
installedpkgs <- as.vector(tmp[is.na(tmp[,"Priority"]), 1])
installedpkgs
save(installedpkgs, file="installed_old.rda")
tmp <- installed.packages()
installedpkgs.new <- as.vector(tmp[is.na(tmp[,"Priority"]), 1])
missing <- setdiff(installedpkgs, installedpkgs.new)
install.packages(missing)
update.packages()
install.packages(c("arfima", "backports", "bdsmatrix", "bestglm", "BH", "bibtex", "BiocManager", "bitops", "blob", "BLPestimatoR", "bookdown", "boot", "brew", "broom", "C50", "carData", "caret", "caretEnsemble", "caTools", "class", "cli", "clipr", "cluster", "codetools", "colorspace", "commonmark", "corpcor", "corrplot", "covr", "crayon", "crosstalk", "cubature", "Cubist", "curl", "CVST", "data.table", "DBI", "ddalpha", "DEoptim", "DEoptimR", "desc", "devtools", "digest", "dimRed", "doParallel", "dotCall64", "DRR", "DT", "dtplyr", "e1071", "earth", "evaluate", "evd", "extraDistr", "FAdist", "fansi", "fields", "filehash", "foreach", "forecast", "formatR", "Formula", "fossil", "fracdiff", "fs", "gam", "gbm", "geometry", "GGally", "ggforce", "ggfortify", "ggraph", "ggrepel", "ggsignif", "ggvis", "gh", "gifski", "git2r", "glmnet", "glue", "gnm", "gower", "gplots", "graphlayouts", "grpreg", "gtools", "haven", "hexbin", "highr", "htmlwidgets", "httpuv", "igraph", "inum", "ipred", "isoband", "iterators", "janitor", "jsonlite", "kernlab", "KernSmooth", "knitr", "labeling", "LaplacesDemon", "later", "lattice", "lava", "leaps", "libcoin", "linprog", "lme4", "lmtest", "lpSolve", "magic", "magick", "magrittr", "manipulateWidget", "mapproj", "maps", "maptools", "MASS", "matlib", "Matrix", "MatrixModels", "maxLik", "mclust", "memoise", "mgcv", "mime", "minpack.lm", "miscTools", "mlbench", "mnormt", "ModelMetrics", "mvtnorm", "nlme", "nloptr", "nnet", "openssl", "openxlsx", "optimx", "packrat", "padr", "partykit", "pbapply", "pbkrtest", "pillar", "pkgbuild", "pkgload", "plm", "plotly", "plotmo", "plotrix", "pls", "plyr", "polynom", "pracma", "prettyunits", "pROC", "processx", "prodlim", "promises", "pryr", "ps", "psych", "quadprog", "quantmod", "quantreg", "qvcalc", "R6", "randtoolbox", "raster", "rcmdcheck", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "RcppProgress", "RCurl", "Rdpack", "readxl", "recipes", "remotes", "reprex", "reshape", "reshape2", "reticulate", "rex", "rgl", "rio", "rJava", "rlang", "rmarkdown", "rngWELL", "robustbase", "ROCR", "rootSolve", "roxygen2", "rpart", "rprojroot", "rsconnect", "rticles", "rversions", "rvest", "sandwich", "scales", "seasonal", "selectr", "sessioninfo", "sfsmisc", "shiny", "shinyBS", "shinythemes", "signal", "sp", "spam", "SparseM", "spatial", "SQUAREM", "stargazer", "survival", "sys", "TeachingDemos", "terra", "testthat", "tibble", "tidygraph", "tidyr", "tinytex", "tree", "trend", "tseries", "TTR", "tweenr", "tzdb", "udunits2", "units", "uroot", "usethis", "utf8", "uuid", "varhandle", "vctrs", "wavethresh", "webshot", "withr", "x13binary", "xfun", "xgboost", "xlsx", "xml2", "xts", "yaml", "zip", "zoo"))
packagesTBI <- c("twitteR", "ROAuth", "hms", "tidytext", "tm", "wordcloud", "igraph", "glue", "networkD3",
"rtweet", "stringr", "ggeasy", "janeaustinr", "widyr")
install.packages(packagesTBI)
librarian::shelf(tidyverse, reshape2, readxl, data.table, nleqslv, BB, Metrics, ggthemes, pracma,
twitteR, ROAuth, hms, lubridate, tidytext, tm, wordcloud, igraph, glue, networkD3,
rtweet, stringr, ggeasy, plotly, janeaustenr, widyr)
install.packages("rjson")
library(twitteR)
tmp <- installed.packages()
installedpkgs.new <- as.vector(tmp[is.na(tmp[,"Priority"]), 1])
missing <- setdiff(installedpkgs, installedpkgs.new)
missing
install.packages(missing)
packagesTBI <- c("twitteR", "ROAuth", "hms", "tidytext", "tm", "wordcloud", "igraph", "glue", "networkD3",
"rtweet", "stringr", "ggeasy", "janeaustinr", "widyr")
install.packages(packagesTBI)
librarian::shelf(tidyverse, reshape2, readxl, data.table, nleqslv, BB, Metrics, ggthemes, pracma,
twitteR, ROAuth, hms, lubridate, tidytext, tm, wordcloud, igraph, glue, networkD3,
rtweet, stringr, ggeasy, plotly, janeaustenr, widyr)
library(igraph)
install.packages("igraph")
library(igraph)
librarian::shelf(tidyverse, reshape2, readxl, data.table, nleqslv, BB, Metrics, ggthemes, pracma,
twitteR, ROAuth, hms, lubridate, tidytext, tm, wordcloud, igraph, glue, networkD3,
rtweet, stringr, ggeasy, plotly, janeaustenr, widyr)
librarian::shelf(tidyverse, reshape2, readxl, data.table, nleqslv, BB, Metrics, ggthemes, pracma,
twitteR, ROAuth, hms, lubridate, tidytext, tm, wordcloud, igraph, glue, networkD3,
rtweet, stringr, ggeasy, plotly, janeaustenr, widyr)
.libPaths()
installed.packages()
installedpkgs
installed.packages()
tmp <- installed.packages()
tmp
str(tmp)
names(tmp)
installedpkgs.new <- as.vector(tmp[is.na(tmp[,"Priority"]), 1])
missing <- setdiff(installedpkgs, installedpkgs.new)
missing
install.packages(missing)
library(twitteR)
library(ROAuth)
library(hms)
library(lubridate)
library(tidytext)
library(tm)
library(wordcloud)
library(igraph)
library(glue)
library(networkD3)
library(rtweet)
library(plyr)
library(stringr)
library(ggplot2)
library(ggeasy)
library(plotly)
library(dplyr)
library(hms)
library(lubridate)
library(magrittr)
library(tidyverse)
library(janeaustenr)
library(widyr)
if (!requireNamespace("httpuv", quietly = TRUE)) {
install.packages("httpuv")
}
#Note: Replace below with your credentials following above reference
api_key <- "pkzfNBUsT7uFI5YEg2qhTT7b2"
api_secret <- "iEx2v9QtqT4zfY58JPzGFugrP3XzjjKwbdsW1J3NVoMTWvTYLK"
access_token <- "3914872158-vYvnOj6VE5ZpXcexVAu3YcMPh54uVdtfu4LLGVk"
access_token_secret <- "jhC9VDAZNbFj4mpPoWbRU3eq1KCrghMqIeiMpkCylcG8i"
#Note: This will ask us permission for direct authentication, type '1' for yes:
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
#Note: Replace below with your credentials following above reference
api_key <- "oJ6CmPerh7jHxP5ZHazRuez1U"
api_secret <- "zVKRrtlXKdWBPsFKaBs4h6z9cS0nQrZwoRI6dmhfDcdV3qDS20"
access_token <- "3914872158-vYvnOj6VE5ZpXcexVAu3YcMPh54uVdtfu4LLGVk"
access_token_secret <- "jhC9VDAZNbFj4mpPoWbRU3eq1KCrghMqIeiMpkCylcG8i"
#Note: This will ask us permission for direct authentication, type '1' for yes:
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
library(openssl)
library(httpuv)
#Note: This will ask us permission for direct authentication, type '1' for yes:
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
options(httr_oauth_cache = TRUE)
#Note: Replace below with your credentials following above reference
api_key <- "oJ6CmPerh7jHxP5ZHazRuez1U"
api_secret <- "zVKRrtlXKdWBPsFKaBs4h6z9cS0nQrZwoRI6dmhfDcdV3qDS20"
access_token <- "3914872158-vYvnOj6VE5ZpXcexVAu3YcMPh54uVdtfu4LLGVk"
access_token_secret <- "jhC9VDAZNbFj4mpPoWbRU3eq1KCrghMqIeiMpkCylcG8i"
#Note: This will ask us permission for direct authentication, type '1' for yes:
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
origop <- options("httr_oauth_cache")
options(httr_oauth_cache = TRUE)
packages <- c("twitteR", "openssl")
### checking if packages are already installed and installing if not
for(i in packages){
if(!(i %in% installed.packages()[, "Package"])){
install.packages(i)
}
library(i, character.only = TRUE) ## load packages
}
install.packages("base64enc")
require(base64enc)
#Note: Replace below with your credentials following above reference
api_key <- "oJ6CmPerh7jHxP5ZHazRuez1U"
api_secret <- "zVKRrtlXKdWBPsFKaBs4h6z9cS0nQrZwoRI6dmhfDcdV3qDS20"
access_token <- "3914872158-vYvnOj6VE5ZpXcexVAu3YcMPh54uVdtfu4LLGVk"
access_token_secret <- "jhC9VDAZNbFj4mpPoWbRU3eq1KCrghMqIeiMpkCylcG8i"
#Note: This will ask us permission for direct authentication, type '1' for yes:
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
#Note: This will ask us permission for direct authentication, type '1' for yes:
setup_twitter_oauth(api_key,api_secret)
#Note: Replace below with your credentials following above reference
api_key <- "oJ6CmPerh7jHxP5ZHazRuez1U"
api_secret <- "zVKRrtlXKdWBPsFKaBs4h6z9cS0nQrZwoRI6dmhfDcdV3qDS20"
access_token <- "3914872158-vYvnOj6VE5ZpXcexVAu3YcMPh54uVdtfu4LLGVk"
access_token_secret <- "jhC9VDAZNbFj4mpPoWbRU3eq1KCrghMqIeiMpkCylcG8i"
#Note: This will ask us permission for direct authentication, type '1' for yes:
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
library("openssl")
library("httpuv")
library("twitteR")
#Note: Replace below with your credentials following above reference
api_key <- "oJ6CmPerh7jHxP5ZHazRuez1U"
api_secret <- "zVKRrtlXKdWBPsFKaBs4h6z9cS0nQrZwoRI6dmhfDcdV3qDS20"
access_token <- "3914872158-vYvnOj6VE5ZpXcexVAu3YcMPh54uVdtfu4LLGVk"
access_token_secret <- "jhC9VDAZNbFj4mpPoWbRU3eq1KCrghMqIeiMpkCylcG8i"
#Note: This will ask us permission for direct authentication, type '1' for yes:
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
library(twitteR)
setup_twitter_oauth(api_key, api_secret, access_token=access_token,
access_secret=access_token_secret)
twitteR:::setup_twitter_oauth(api_key, api_secret, access_token=access_token,
access_secret=access_token_secret)
sessionInfo()
librarian::shelf(tidyverse, reshape2, readxl, data.table, nleqslv, BB, Metrics, ggthemes, pracma,
twitteR, ROAuth, hms, lubridate, tidytext, tm, wordcloud, igraph, glue, networkD3,
rtweet, stringr, ggeasy, plotly, janeaustenr, widyr)
if (!requireNamespace("httpuv", quietly = TRUE)) {
install.packages("httpuv")
}
library(openssl)
library(httpuv)
#Note: Replace below with your credentials following above reference
api_key <- "oJ6CmPerh7jHxP5ZHazRuez1U"
api_secret <- "zVKRrtlXKdWBPsFKaBs4h6z9cS0nQrZwoRI6dmhfDcdV3qDS20"
access_token <- "3914872158-vYvnOj6VE5ZpXcexVAu3YcMPh54uVdtfu4LLGVk"
access_token_secret <- "jhC9VDAZNbFj4mpPoWbRU3eq1KCrghMqIeiMpkCylcG8i"
#Note: This will ask us permission for direct authentication, type '1' for yes:
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
librarian::shelf(tidyverse, reshape2, readxl, data.table, nleqslv, BB, Metrics, ggthemes, pracma,
twitteR, ROAuth, hms, lubridate, tidytext, tm, wordcloud, igraph, glue, networkD3,
rtweet, stringr, ggeasy, plotly, janeaustenr, widyr)
library(openssl)
library(httpuv)
#Note: Replace below with your credentials following above reference
api_key <- "oJ6CmPerh7jHxP5ZHazRuez1U"
api_secret <- "zVKRrtlXKdWBPsFKaBs4h6z9cS0nQrZwoRI6dmhfDcdV3qDS20"
access_token <- "3914872158-vYvnOj6VE5ZpXcexVAu3YcMPh54uVdtfu4LLGVk"
access_token_secret <- "jhC9VDAZNbFj4mpPoWbRU3eq1KCrghMqIeiMpkCylcG8i"
#Note: This will ask us permission for direct authentication, type '1' for yes:
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
library(rtweet)
#Note: Replace below with your credentials following above reference
api_key <- "oJ6CmPerh7jHxP5ZHazRuez1U"
api_secret <- "zVKRrtlXKdWBPsFKaBs4h6z9cS0nQrZwoRI6dmhfDcdV3qDS20"
access_token <- "3914872158-vYvnOj6VE5ZpXcexVAu3YcMPh54uVdtfu4LLGVk"
access_token_secret <- "jhC9VDAZNbFj4mpPoWbRU3eq1KCrghMqIeiMpkCylcG8i"
#Note: This will ask us permission for direct authentication, type '1' for yes:
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
#Note: Replace below with your credentials following above reference
api_key <- "oJ6CmPerh7jHxP5ZHazRuez1U"
api_secret_key <- "zVKRrtlXKdWBPsFKaBs4h6z9cS0nQrZwoRI6dmhfDcdV3qDS20"
access_token <- "3914872158-vYvnOj6VE5ZpXcexVAu3YcMPh54uVdtfu4LLGVk"
access_token_secret <- "jhC9VDAZNbFj4mpPoWbRU3eq1KCrghMqIeiMpkCylcG8i"
#Note: This will ask us permission for direct authentication, type '1' for yes:
# setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
library(rtweet)
## authenticate via web browser
token <- create_token(
app = "RangoUnchained",
consumer_key = api_key,
consumer_secret = api_secret_key,
access_token = access_token,
access_secret = access_token_secret)
tweets <- searchTwitter("#globalwarming", n=4000, lang="en")
setup_twitter_oauth(api_key,api_secret,access_token,access_token_secret)
token
tweets <- searchTwitter("#globalwarming", n=4000, lang="en")
search_term <- '#ChristmasEveEve'
by <- 'hour'
tweets <- search_tweets(
search_term, n = 10000, retryonratelimit = TRUE
)
tweets
search_tweets(
search_term, n = 10000, retryonratelimit = TRUE
)
search_term <- '#War'
by <- 'hour'
tweets <- search_tweets(
search_term, n = 10000, retryonratelimit = TRUE
)
create_token(
app = "RangoUnchained",
consumer_key = api_key,
consumer_secret = api_secret_key,
access_token = access_token,
access_secret = access_token_secret)
search_term <- '#War'
by <- 'hour'
tweets <- search_tweets(
search_term, n = 10000, retryonratelimit = TRUE
)
